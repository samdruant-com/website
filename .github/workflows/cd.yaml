name: CD
run-name: "CD for ${{ inputs.app }}"
on:
  workflow_call:
    inputs:
      app:
        required: true
        type: string
        description: "Which app to continously deploy: frontend or backend"

env:
  REGISTRY: ghcr.io

jobs:
  verify-input:
    runs-on: ubuntu-latest
    steps:
      - name: Verify input
        run: |
          if [[ "${{ inputs.app }}" != "frontend" && "${{ inputs.app }}" != "backend" ]]; then
            echo "::error::Invalid app input: ${{ inputs.app }}. Must be 'frontend' or 'backend'."
            exit 1
          fi
  release:
    outputs:
      tag: ${{ steps.release.outputs.version }}
      released: ${{ steps.release.outputs.releases_created}}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Create release
        id: release
        uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445 # v4.2.0
        with:
          release-type: simple
  build:
    name: Build and push ${{ inputs.app }} container image
    needs: [verify-input, release]
    runs-on: ubuntu-latest
    permissions:
      contents: read # needs write permission to push tag and release
      packages: write # needs write permission to publish Docker image
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Login to registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build and push ${{ inputs.app }} container image
        if: ${{ needs.release.outputs.released != 'true' }}
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: src/${{ inputs.app }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}-${{ inputs.app }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ github.repository }}-${{ inputs.app }}:latest
          labels: org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          platforms: ${{ matrix.platform }}

      - name: Build and push ${{ inputs.app }} container image (RELEASE)
        if: ${{ needs.release.outputs.released == 'true' }}
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: src/${{ inputs.app }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}-${{ inputs.app }}:${{ needs.release.outputs.tag }}
            ${{ env.REGISTRY }}/${{ github.repository }}-${{ inputs.app }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ github.repository }}-${{ inputs.app }}:latest
          labels: org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          platforms: ${{ matrix.platform }}
