name: CI
run-name: CI for ${{ inputs.app }}
on:
  workflow_call:
    inputs:
      app:
        type: string
        description: "Which app to continously integrate: frontend or backend"
  pull_request:
    branches: [main]
    types: [opened, edited, synchronize]
    paths-ignore:
      - "src/frontend/**"
      - "src/backend/**"

jobs:
  verify-input:
    if: ${{ inputs.app != '' }}
    name: Verify input
    runs-on: ubuntu-latest
    steps:
      - name: Verify input
        run: |
          if [[ "${{ inputs.app }}" != "frontend" && "${{ inputs.app }}" != "backend" ]]; then
            echo "::error::Invalid app input: ${{ inputs.app }}. Must be 'frontend' or 'backend'."
            exit 1
          fi

  lint-commits:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0 # fetch all history for commitlint

      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: package.json

      - name: Install dependencies
        run: npm install

      - name: Lint PR commits
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Lint PR title
        run: echo "${{ github.event.pull_request.title }}" | npx npx commitlint

  lint-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: package.json

      - name: Install Dependencies
        run: npm install

      - name: Lint
        run: npm run lint

  scan-security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Scan for hard-coded secrets
        id: secrets
        uses: trufflesecurity/trufflehog@690e5c7aff8347c3885096f3962a0633d9129607 # v3.88.23

      - name: Scan for vulnerable code
        id: code
        uses: bearer/bearer-action@828eeb928ce2f4a7ca5ed57fb8b59508cb8c79bc # v2
        with:
          diff: true
          severity: "critical,high"
          exit-code: "1"

      - name: Scan for vulnerable dependencies
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30.0
        id: deps
        with:
          scan-type: fs
          scanners: vuln
          severity: "CRITICAL,HIGH"
          exit-code: "1"

      - name: Scan for vulnerable configs
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30.0
        id: configs
        with:
          scan-type: fs
          scanners: misconfig
          severity: "CRITICAL,HIGH"
          exit-code: "0" # Configs are not as critical, so we don't fail the build on them

  test-build:
    if: ${{ inputs.app != '' }}
    needs: verify-input
    name: Build and test ${{ inputs.app }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version-file: src/${{ inputs.app }}/package.json

      - name: install deps
        working-directory: src/${{ inputs.app }}
        run: npm install

      - name: build
        working-directory: src/${{ inputs.app }}
        run: npm run build
